<Page
    x:Class="LiveMusicLite.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10FallCreatorsUpdate="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:LiveMusicLite"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:viewmodel="using:LiveMusicLite.ViewModel"
    d:DataContext="{d:DesignInstance Type=viewmodel:MainPageViewModel}"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <Style x:Key="ButtonFontIconStyle" BasedOn="{StaticResource ButtonRevealStyle}" TargetType="Button">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="17" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <Style x:Key="MediaControlButtonStyle" BasedOn="{StaticResource ButtonFontIconStyle}" TargetType="Button">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ToggleButtonButtonFontIconStyle" BasedOn="{StaticResource ToggleButtonRevealStyle}" TargetType="ToggleButton">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="40" />
                <Setter Property="CornerRadius" Value="4" />
                <Setter Property="Padding" Value="0" />
            </Style>
            <SolidColorBrush x:Key="ToggleButtonUncheckedCheckedIndeterminateBackground" Color="{ThemeResource SystemAccentColor}" />
            <Style x:Key="ToggleButtonRevealStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{ThemeResource ToggleButtonRevealBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonRevealBorderThemeThickness}" />
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}" />
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}" />-->
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}" />
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}" />-->
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}" />
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}" />-->
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}" />
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />-->
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}" />
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}" />-->
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>

        <GridView
            x:Name="backgroundImagesGridView"
            Padding="0"
            animations:ReorderGridAnimation.Duration="500"
            IsItemClickEnabled="False"
            ItemsSource="{x:Bind musicImages, Mode=OneWay}"
            Opacity="0.4"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            ScrollViewer.HorizontalScrollMode="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            ScrollViewer.VerticalScrollMode="Disabled">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="IsEnabled" Value="False" />
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid x:Name="MaxItemsWrapGrid" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
        </GridView>

        <StackPanel
            x:Name="noneMusicStackPanel"
            Margin="30,40,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Visibility="{x:Bind ViewModel.IsMediaControlShowReverse, Mode=OneWay}">
            <TextBlock FontSize="30" FontWeight="SemiBold" Text="播放一些音乐吧。" />
            <Button Margin="0,10,0,0" Command="{x:Bind ViewModel.OpenAndPlayMusicCommand}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Margin="0,0,5,0" FontFamily="Segoe MDL2 Assets" Glyph="&#xE1A5;" />
                        <TextBlock Text="打开音乐文件..." />
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>

        <Image
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Opacity="0.2"
            Source="{x:Bind MusicInfomation.MusicImageProperties, Mode=OneWay}"
            Stretch="UniformToFill" />

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image
                Width="Auto"
                Height="200"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{x:Bind MusicInfomation.MusicImageProperties, Mode=OneWay}"
                Stretch="Uniform" />

            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                
                <!--<TextBlock
                    x:Name="musicName"
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    FontSize="18"
                    Text="{x:Bind MusicInfomation.MusicTitleProperties, Mode=OneWay}"
                    TextAlignment="Center"
                    TextWrapping="Wrap" />-->
                
                <StackPanel x:Name="musicNameStackPanel" Grid.Row="0" HorizontalAlignment="Center" Width="200" PointerEntered="musicNameStackPanel_PointerEntered">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="{x:Bind musicNameInnerStackPanelHorizontalAlignment,Mode=OneWay}">
                        <TextBlock x:Name="musicName" SizeChanged="musicName_SizeChanged" FontSize="18" Text="{x:Bind HandleText(MusicInfomation.MusicTitleProperties), Mode=OneWay}">
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="0" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
                
                <TextBlock
                    x:Name="musicAlbumArtist"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    FontSize="16"
                    Width="250"
                    FontWeight="Bold"
                    Text="{x:Bind MusicInfomation.MusicAlbumArtistProperties, Mode=OneWay}"
                    TextAlignment="Center"
                    TextTrimming="WordEllipsis" />
            </Grid>
        </StackPanel>

        <StackPanel
            Margin="0,0,0,10"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">
            <Button
                x:Name="muteButton"
                Margin="0,0,5,0"
                Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                Command="{x:Bind ViewModel.MuteCommand}"
                Style="{StaticResource ButtonFontIconStyle}">
                <FontIcon FontSize="17" Glyph="{x:Bind ViewModel.VolumeGlyphState.VolumeGlyph, Mode=OneWay}" />
            </Button>

            <Slider
                x:Name="volumeSlider"
                Width="100"
                Margin="5,0,10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                ValueChanged="VolumeChanged"
                Value="{x:Bind MusicInfomation.VolumeInSliderProperties, Mode=OneWay}" />

            <Button
                x:Name="openMusicButton"
                Command="{x:Bind ViewModel.OpenAndPlayMusicCommand}"
                Content="&#xE1A5;"
                Margin="0,0,5,0"
                Style="{StaticResource ButtonFontIconStyle}" />

            <Button
                x:Name="moreOptionsFlyoutButton"
                Grid.Column="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                Content="&#xE10C;"
                FontSize="16"
                Style="{StaticResource ButtonFontIconStyle}">
                <Button.Flyout>
                    <Flyout>
                        <StackPanel>
                            <Button
                                x:Name="stopPlayingButton"
                                Background="Transparent"
                                Command="{x:Bind ViewModel.StopMusicCommand}"
                                Style="{StaticResource ButtonRevealStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Segoe MDL2 Assets"
                                        FontSize="14"
                                        Glyph="&#xE106;" />
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        Text="清空&quot;正在播放&quot;列表" />
                                </StackPanel>
                            </Button>
                            <Button
                                x:Name="settingsButton"
                                Margin="0,5,0,0"
                                Background="Transparent"
                                Command="{x:Bind ViewModel.OpenSettingsCommand}"
                                Style="{StaticResource ButtonRevealStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Segoe MDL2 Assets"
                                        FontSize="14"
                                        Glyph="&#xE115;" />
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="14"
                                        Text="设置" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <muxc:SplitButton Background="Transparent" Margin="5,0,0,0" Height="40">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{x:Bind playRateSelectionGridView.SelectedItem,Mode=OneWay}"/>
                </StackPanel>
                <muxc:SplitButton.Flyout>
                    <Flyout Placement="Bottom">
                        <StackPanel>
                            <StackPanel Margin="0,0,0,10" Orientation="Horizontal">
                                <FontIcon Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xEC57;" />
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="播放速度"/>
                            </StackPanel>
                            <GridView x:Name="playRateSelectionGridView" Padding="0" ItemClick="PlayRateSelectionChanged" SelectedIndex="1" IsItemClickEnabled="True">
                                <x:String>0.5x</x:String>
                                <x:String>1x</x:String>
                                <x:String>1.5x</x:String>
                                <x:String>2x</x:String>
                            </GridView>
                        </StackPanel>
                    </Flyout>
                </muxc:SplitButton.Flyout>
            </muxc:SplitButton>
        </StackPanel>


        <Grid
            Grid.Row="1"
            Height="100"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            RequestedTheme="Dark">
            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColorDark2}" />
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition Height="61.6" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel
                x:Name="mediaControlStackPanel"
                Margin="0,8,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Horizontal"
                Visibility="{x:Bind ViewModel.IsMediaControlShow, Converter={StaticResource BoolToVisibility}, Mode=OneWay}">
                <ToggleButton
                    x:Name="shuffleMusicToggleButton"
                    Command="{x:Bind ViewModel.ShuffleMusicCommand}"
                    Content="&#xE14B;"
                    Style="{StaticResource ToggleButtonButtonFontIconStyle}"
                    ToolTipService.ToolTip="{x:Bind ViewModel.ShufflingMusicProperties, Mode=OneWay}" />

                <Button
                    x:Name="previousMusicButton"
                    Margin="5,0,0,0"
                    Command="{x:Bind ViewModel.PreviousMusicCommand}"
                    Content="&#xE100;"
                    Style="{StaticResource MediaControlButtonStyle}" />

                <Button
                    x:Name="pausePlayingButton"
                    Width="51"
                    Height="51"
                    Margin="6,0,6,0"
                    BorderBrush="#9f9f9f"
                    BorderThickness="2"
                    Command="{x:Bind ViewModel.PlayPauseMusicCommand}"
                    Style="{StaticResource MediaControlButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind ViewModel.NowPlayingProperties, Mode=OneWay}">
                    <Windows10FallCreatorsUpdate:Button.KeyboardAccelerators>
                        <Windows10FallCreatorsUpdate:KeyboardAccelerator Key="Space" Modifiers="None" />
                        <Windows10FallCreatorsUpdate:KeyboardAccelerator Key="P" Modifiers="Control" />
                    </Windows10FallCreatorsUpdate:Button.KeyboardAccelerators>

                    <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="27" Glyph="{x:Bind ViewModel.PausePlayingButtonIcon, Mode=OneWay}" />
                </Button>

                <Button
                    x:Name="nextMusicButton"
                    Margin="0,0,5,0"
                    Padding="0"
                    Command="{x:Bind ViewModel.NextMusicCommand}"
                    Content="&#xE101;"
                    Style="{StaticResource MediaControlButtonStyle}" />

                <ToggleButton
                    x:Name="repeatMusicButton"
                    Command="{x:Bind ViewModel.RepeatMusicCommand}"
                    CommandParameter="{x:Bind repeatMusicButton.IsChecked, Mode=OneWay}"
                    IsThreeState="True"
                    Style="{StaticResource ToggleButtonButtonFontIconStyle}"
                    ToolTipService.ToolTip="{x:Bind ViewModel.RepeatingMusicProperties, Mode=OneWay}">
                    <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="16" Glyph="{x:Bind ViewModel.RepeatButtonIconString, Mode=OneWay}" />
                </ToggleButton>
            </StackPanel>

            <StackPanel
                x:Name="musicProcessStackPanel"
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{x:Bind ViewModel.IsMediaControlShow, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <TextBlock
                    x:Name="musicNowPlayingTimeTextBlock"
                    Grid.Column="0"
                    Margin="20,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{x:Bind ViewModel.TimeTextBlockText, Mode=OneWay}" />
                <Slider
                    x:Name="processSlider"
                    Grid.Column="1"
                    MinWidth="400"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsEnabled="{x:Bind ViewModel.IsMediaControlShow, Mode=OneWay}"
                    IsThumbToolTipEnabled="False"
                    Maximum="{x:Bind MusicInfomation.MusicDurationProperties, Mode=OneWay}"
                    ValueChanged="processSlider_ValueChanged"
                    Value="{x:Bind ViewModel.ProcessSliderValue, Mode=OneWay}" />
                <TextBlock
                    Grid.Column="2"
                    Margin="0,0,20,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="12"
                    Foreground="White"
                    Text="{x:Bind MusicInfomation.MusicLenthProperties, Mode=OneWay}" />
            </StackPanel>
        </Grid>

        <TextBlock
            x:Name="titleTextBlock"
            Grid.Row="0"
            Grid.Column="0"
            Margin="11,11,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Style="{StaticResource CaptionTextBlockStyle}"
            Text="Live Music Lite" />
    </Grid>
</Page>
