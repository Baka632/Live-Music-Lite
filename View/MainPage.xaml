<Page
    x:Class="LiveMusicLite.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LiveMusicLite"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:Windows10FallCreatorsUpdate="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 5)" 
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="Page_Loaded">
    <Page.Resources>
        <ResourceDictionary>
            <Style TargetType="Button" x:Key="ButtonFontIconStyle" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
            </Style>
            <Windows10version1809:Style TargetType="ToggleButton" x:Key="ToggleButtonButtonFontIconStyle" BasedOn="{StaticResource ToggleButtonRevealStyle}">
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="CornerRadius" Value="2"/>
            </Windows10version1809:Style>
            <SolidColorBrush x:Key="ToggleButtonUncheckedCheckedIndeterminateBackground" Color="{ThemeResource SystemAccentColor}"/>
            <Style x:Key="ToggleButtonRevealStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="{ThemeResource ToggleButtonRevealBackground}"/>
                <Setter Property="Foreground" Value="{ThemeResource ToggleButtonForeground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrush}"/>
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonRevealBorderThemeThickness}"/>
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="FocusVisualMargin" Value="-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPointerOver}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundPressed}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushPressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundPressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundChecked}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedPressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedPressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushCheckedDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundCheckedDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{StaticResource ToggleButtonUncheckedCheckedIndeterminateBackground}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100"/>
        </Grid.RowDefinitions>

        <GridView ItemsSource="{x:Bind musicImages,Mode=OneWay}" Opacity="0.4" animations:ReorderGridAnimation.Duration="500" IsItemClickEnabled="False" x:Name="backgroundImagesGridView" Padding="0" ScrollViewer.HorizontalScrollMode="Disabled" ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="IsEnabled" Value="False"/>
                </Style>
            </GridView.ItemContainerStyle>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid x:Name="MaxItemsWrapGrid"
                           Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
        </GridView>
        
        <StackPanel x:Name="noneMusicStackPanel" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,40,0,0">
            <TextBlock Text="播放一些音乐吧。" FontSize="30" FontWeight="SemiBold"/>
            <Button Margin="0,10,0,0" Click="OpenMusicFile">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xE1A5;" FontFamily="Segoe MDL2 Assets" Margin="0,0,5,0"/>
                        <TextBlock Text="打开音乐文件..."/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </StackPanel>

        <Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.2" Stretch="UniformToFill" Source="{x:Bind musicInfomation.MusicImageProperties,Mode=OneWay}"/>
        
        <Grid HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Image Stretch="Fill" Source="{x:Bind musicInfomation.MusicImageProperties,Mode=OneWay}" Width="Auto" Height="200" Margin="0,0,10,0"/>
            <Grid Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="musicName" TextWrapping="Wrap" Text="{x:Bind musicInfomation.MusicTitleProperties,Mode=OneWay}" FontSize="18" Grid.Row="0"/>
                <TextBlock x:Name="musicAlbumArtist" TextWrapping="Wrap" Margin="0,0,0,5" Grid.Row="1" Text="{x:Bind musicInfomation.MusicAlbumArtistProperties,Mode=OneWay}" FontWeight="Bold" FontSize="16"/>
            </Grid>
        </Grid>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,10">
            <Button Height="35" Width="35" x:Name="muteButton" HorizontalAlignment="Center" VerticalAlignment="Center" Click="MuteMusic" Margin="0,0,5,0" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                <FontIcon FontSize="16" Glyph="{x:Bind volumeGlyphState.VolumeGlyph,Mode=OneWay}"/>
            </Button>

            <Slider x:Name="volumeSlider" Width="100" ValueChanged="VolumeChanged" Value="{x:Bind musicInfomation.VolumeInSliderProperties,Mode=OneWay}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,10,0"/>

            <Button x:Name="openMusicButton" Click="OpenMusicFile" Content="&#xE1A5;" Style="{StaticResource ButtonFontIconStyle}" Margin="0,0,5,0"/>

            <Button x:Name="moreOptionsFlyoutButton" Height="35" Width="35" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Content="&#xE10C;" Grid.Column="2" Background="Transparent" Style="{StaticResource ButtonFontIconStyle}">
                <Button.Flyout>
                    <Flyout>
                        <StackPanel>
                            <Button x:Name="stopPlayingButton" Click="StopMusic" Background="Transparent" Style="{StaticResource ButtonRevealStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE106;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock Text="清空&quot;正在播放&quot;列表" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button x:Name="settingsButton" Click="ShowSettings" Margin="0,5,0,0" Background="Transparent" Style="{StaticResource ButtonRevealStyle}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE115;" Margin="0,0,5,0" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock Text="设置" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </StackPanel>


        <Grid HorizontalAlignment="Stretch" RequestedTheme="Dark" Height="100" VerticalAlignment="Bottom" Grid.Row="1">
            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColorDark2}"/>
            </Grid.Background>

            <Grid.RowDefinitions>
                <RowDefinition Height="61.6"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource ButtonFontIconStyle}" x:Key="musicControlButtonStyle">
                    <Setter Property="Height" Value="51"/>
                    <Setter Property="Width" Value="51"/>
                </Style>
            </Grid.Resources>

            <StackPanel Margin="0,8,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Orientation="Horizontal" x:Name="mediaControlStackPanel">
                <ToggleButton x:Name="shuffleMusicToggleButton" ToolTipService.ToolTip="{x:Bind ShufflingMusicProperties,Mode=OneWay}" Click="ShuffleMusic" Content="&#xE14B;" Style="{StaticResource ToggleButtonButtonFontIconStyle}"/>

                <Button x:Name="previousMusicButton" Click="PreviousMusic" Margin="5,0,0,0" Content="&#xE100;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                <Button x:Name="pausePlayingButton" ToolTipService.ToolTip="{x:Bind NowPlayingProperties,Mode=OneWay}" FontSize="27" Content="&#xE102;" Click="PlayPauseMusic" Margin="6,0,6,0" Style="{StaticResource musicControlButtonStyle}" BorderBrush="#9f9f9f" BorderThickness="2">
                    <Windows10FallCreatorsUpdate:Button.KeyboardAccelerators>
                        <Windows10FallCreatorsUpdate:KeyboardAccelerator Modifiers="None" Key="Space"/>
                        <Windows10FallCreatorsUpdate:KeyboardAccelerator Modifiers="Control" Key="P"/>
                    </Windows10FallCreatorsUpdate:Button.KeyboardAccelerators>
                </Button>
                <Button x:Name="nextMusicButton" Click="NextMusic" Margin="0,0,5,0" Content="&#xE101;" Style="{StaticResource musicControlButtonStyle}" FontSize="20" Width="35" Height="35"/>

                <ToggleButton x:Name="repeatMusicButton" ToolTipService.ToolTip="{x:Bind RepeatingMusicProperties,Mode=OneWay}"  IsThreeState="True" Click="RepeatMusic" Content="&#xE1CD;" Style="{StaticResource ToggleButtonButtonFontIconStyle}"/>
            </StackPanel>

            <StackPanel x:Name="musicProcessStackPanel" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Margin="20,0,0,0" x:Name="musicNowPlayingTimeTextBlock" Text="0:00" Grid.Column="0" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Slider MinWidth="400" HorizontalAlignment="Center" Margin="5,0,5,0" Grid.Column="1" x:Name="processSlider" IsThumbToolTipEnabled="False" ValueChanged="processSlider_ValueChanged" VerticalAlignment="Center"/>
                <TextBlock Margin="0,0,20,0" Text="{x:Bind musicInfomation.MusicLenthProperties,Mode=OneWay}" Grid.Column="2" FontSize="12" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
        <TextBlock x:Name="titleTextBlock" Text="Live Music Lite" Style="{StaticResource CaptionTextBlockStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0" Grid.Row="0" Margin="11,11,0,0"/>
    </Grid>
</Page>
